        -:    0:Source:C:/Users/Pepega/CLionProjects/OOPLAB1/UnorderedList.cpp
        -:    0:Graph:C:\Users\Pepega\CLionProjects\OOPLAB1\cmake-build-debug-coverage\CMakeFiles\OOPLAB1.dir\UnorderedList.cpp.gcno
        -:    0:Data:C:\Users\Pepega\CLionProjects\OOPLAB1\cmake-build-debug-coverage\CMakeFiles\OOPLAB1.dir\UnorderedList.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "UnorderedList.h"
        -:    2:
        -:    3:typedef std::string Key;
        -:    4:
function _ZN5ValueC2Ev called 33909 returned 100% blocks executed 100%
    33909:    5:Value::Value(): age(0), weight(0) {}
        -:    6:
function _ZN5ValueC2Ejj called 7003 returned 100% blocks executed 100%
     7003:    7:Value::Value(unsigned age, unsigned weight): age(age), weight(weight) {}
        -:    8:
function _ZeqRK5ValueS1_ called 5003 returned 100% blocks executed 100%
     5003:    9:bool operator==(const Value& A, const Value& B){
     5003:   10:    if((A.age == B.age) && (A.weight == B.weight)){
     5003:   10-block  0
branch  0 taken 5002 (fallthrough)
branch  1 taken 1
     5002:   10-block  1
branch  2 taken 5002 (fallthrough)
branch  3 taken 0
     5002:   11:        return true;
     5002:   11-block  0
        -:   12:    }
        1:   13:    return false;
        1:   13-block  0
        -:   14:}
        -:   15:
function _ZN4ListC2Ev called 34922 returned 100% blocks executed 100%
    34922:   16:List::List() : _sz(0), _pFirstNode(nullptr){}
        -:   17:
        -:   18:
function _ZN4ListD2Ev called 34922 returned 100% blocks executed 100%
    69844:   19:List::~List() {
    34922:   20:    FreeList();
    34922:   20-block  0
call    0 returned 34922
    34922:   21:}
        -:   22:
function _ZN4List4PushERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERK5Value called 17305 returned 100% blocks executed 100%
    17305:   23:void List::Push(const std::string& key,const Value& data) {
    17305:   24:    ++_sz;
        -:   25:
    17305:   26:    ListNode* pTemp = _pFirstNode;
    17305:   27:    _pFirstNode = NewNode(key, data);
    17305:   27-block  0
call    0 returned 17305
    17305:   28:    _pFirstNode -> pNext = pTemp;
    17305:   29:}
        -:   30:
function _ZN4List4PushERNS_8ListNodeE called 15712 returned 100% blocks executed 100%
    15712:   31:void List::Push(List::ListNode& N) {
    15712:   32:    ++_sz;
        -:   33:
    15712:   34:    List::ListNode* pTemp = _pFirstNode;
    15712:   35:    _pFirstNode = &N;
    15712:   36:    N.pNext = pTemp;
    15712:   37:}
        -:   38:
function _ZN4List5EraseERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 3005 returned 100% blocks executed 100%
     3005:   39:bool List::Erase(const std::string& key) {
     3005:   40:    if(IsEmpty()) {
     3005:   40-block  0
call    0 returned 3005
branch  1 taken 1 (fallthrough)
branch  2 taken 3004
        1:   41:        return false;
        1:   41-block  0
        -:   42:    }
        -:   43:
     3004:   44:    ListNode* pTemp = _pFirstNode -> pNext;
     3004:   45:    if(_pFirstNode->key == key) {
     3004:   45-block  0
call    0 returned 3004
branch  1 taken 745 (fallthrough)
branch  2 taken 2259
      745:   46:        delete _pFirstNode;
      745:   46-block  0
branch  0 taken 745 (fallthrough)
branch  1 taken 0
      745:   46-block  1
call    2 returned 745
call    3 returned 745
      745:   47:        _pFirstNode = pTemp;
      745:   48:        --_sz;
      745:   49:        return true;
      745:   49-block  0
        -:   50:    }
        -:   51:
     2259:   52:    ListNode* pPrevTemp = _pFirstNode;
     2259:   52-block  0
    58898:   53:    while(nullptr != pTemp) {
    58898:   53-block  0
branch  0 taken 58896 (fallthrough)
branch  1 taken 2
    58896:   54:        if(pTemp->key == key) {
    58896:   54-block  0
call    0 returned 58896
branch  1 taken 2257 (fallthrough)
branch  2 taken 56639
     2257:   55:            pPrevTemp -> pNext = pTemp -> pNext;
     2257:   56:            delete pTemp;
     2257:   56-block  0
branch  0 taken 2257 (fallthrough)
branch  1 taken 0
     2257:   56-block  1
call    2 returned 2257
call    3 returned 2257
     2257:   57:            --_sz;
     2257:   58:            return true;
     2257:   58-block  0
        -:   59:        }
    56639:   60:        pPrevTemp = pTemp;
    56639:   61:        pTemp = pTemp -> pNext;
    56639:   61-block  0
        -:   62:    }
        2:   63:    return false;
        2:   63-block  0
        -:   64:}
        -:   65:
function _ZN4List3PopEv called 15712 returned 100% blocks executed 100%
    15712:   66:List::ListNode* List::Pop() {
    15712:   67:    List::ListNode* pTemp = _pFirstNode;
    15712:   68:    _pFirstNode = pTemp -> pNext;
    15712:   69:    --_sz;
    15712:   70:    return pTemp;
    15712:   70-block  0
        -:   71:
        -:   72:}
        -:   73:
function _ZN4ListaSERKS_ called 3458 returned 100% blocks executed 100%
     3458:   74:List& List::operator=(const List& L) {
     3458:   75:    if(this == &L) {
     3458:   75-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 3457
        1:   76:        return *this;
        1:   76-block  0
        -:   77:    }
        -:   78:
     3457:   79:    FreeList();
     3457:   79-block  0
call    0 returned 3457
        -:   80:
     3457:   81:    if(L.IsEmpty()) {
call    0 returned 3457
branch  1 taken 3217 (fallthrough)
branch  2 taken 240
     3217:   82:        _pFirstNode = nullptr;
     3217:   83:        _sz = 0;
     3217:   84:        return *this;
     3217:   84-block  0
        -:   85:    }
        -:   86:
      240:   87:    _sz = L._sz;
      240:   88:    CopyList(L);
      240:   88-block  0
call    0 returned 240
      240:   89:    return *this;
        -:   90:}
        -:   91:
function _ZN4List11MoveTopNodeERS_ called 15712 returned 100% blocks executed 100%
    15712:   92:void List::MoveTopNode(List& listFrom) {
    15712:   93:    this -> Push(*(listFrom.Pop()));
    15712:   93-block  0
call    0 returned 15712
call    1 returned 15712
    15712:   94:}
function _ZNK4List3TopEv called 15712 returned 100% blocks executed 100%
    15712:   95:const List::ListNode& List::Top() const{
    15712:   96:    return *(this -> _pFirstNode);
    15712:   96-block  0
        -:   97:}
        -:   98:
function _ZNK4List7IsEmptyEv called 6462 returned 100% blocks executed 100%
     6462:   99:bool List::IsEmpty() const {
     6462:  100:    return _sz == 0;
     6462:  100-block  0
        -:  101:}
        -:  102:
function _ZNK4List8ContainsERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 29536 returned 100% blocks executed 100%
    29536:  103:bool List::Contains(const std::string& key) const {
    29536:  104:    ListNode* pTemp = _pFirstNode;
    29536:  104-block  0
   611933:  105:    while(nullptr != pTemp) {
   611933:  105-block  0
branch  0 taken 594528 (fallthrough)
branch  1 taken 17405
   594528:  106:        if(pTemp -> key == key) {
   594528:  106-block  0
call    0 returned 594528
branch  1 taken 12131 (fallthrough)
branch  2 taken 582397
    12131:  107:            return true;
    12131:  107-block  0
        -:  108:        }
   582397:  109:        pTemp = pTemp -> pNext;
   582397:  109-block  0
        -:  110:    }
    17405:  111:    return false;
    17405:  111-block  0
        -:  112:}
        -:  113:
function _ZN4List10ValueByKeyERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 8000 returned 100% blocks executed 100%
     8000:  114:Value& List::ValueByKey(const std::string& key) {
     8000:  115:    ListNode* pTemp = _pFirstNode;
     8000:  115-block  0
   280412:  116:    while(nullptr != pTemp) {
   280412:  116-block  0
branch  0 taken 279412 (fallthrough)
branch  1 taken 1000
   279412:  117:        if(pTemp -> key == key) {
   279412:  117-block  0
call    0 returned 279412
branch  1 taken 7000 (fallthrough)
branch  2 taken 272412
     7000:  118:            return pTemp -> data;
     7000:  118-block  0
        -:  119:        }
   272412:  120:        pTemp = pTemp -> pNext;
   272412:  120-block  0
        -:  121:    }
     1000:  122:    Value data;
     1000:  122-block  0
call    0 returned 1000
     1000:  123:    Push(key, data);
call    0 returned 1000
branch  1 taken 1000 (fallthrough)
branch  2 taken 0 (throw)
     1000:  124:    return _pFirstNode -> data;
     1000:  124-block  0
        -:  125:}
        -:  126:
function _ZN4List7NewNodeERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERK5Value called 17305 returned 100% blocks executed 100%
    17305:  127:List::ListNode* List::NewNode(const std::string& key,const Value& data) {
    17305:  128:    List::ListNode* newNode = new ListNode;
    17305:  128-block  0
call    0 returned 17305
call    1 returned 17305
    17305:  129:    newNode -> key = key;
call    0 returned 17305
    17305:  130:    newNode -> data = data;
    17305:  131:    return newNode;
        -:  132:}
        -:  133:
function _ZN4List8FillDataEPNS_8ListNodeES1_ called 4300 returned 100% blocks executed 100%
     4300:  134:void List::FillData(ListNode* pNodeTo, ListNode* pNodeFrom) {
     4300:  135:    pNodeTo -> data = pNodeFrom -> data;
     4300:  136:    pNodeTo -> key = pNodeFrom -> key;
     4300:  136-block  0
call    0 returned 4300
     4300:  137:}
        -:  138:
function _ZN4List8CopyListERKS_ called 240 returned 100% blocks executed 100%
      240:  139:void List::CopyList(const List& L) {
      240:  140:    if(nullptr != L._pFirstNode) {
      240:  140-block  0
branch  0 taken 240 (fallthrough)
branch  1 taken 0
      240:  141:        ListNode* pTemp = L._pFirstNode;
        -:  142:
      240:  143:        ListNode* newNode = new ListNode;
      240:  143-block  0
call    0 returned 240
call    1 returned 240
      240:  144:        FillData(newNode, pTemp);
call    0 returned 240
      240:  145:        _pFirstNode = newNode;
        -:  146:
      240:  147:        pTemp = pTemp -> pNext;
     4300:  148:        while(nullptr != pTemp) {
     4300:  148-block  0
branch  0 taken 4060 (fallthrough)
branch  1 taken 240
     4060:  149:            ListNode* pPrevTemp = newNode;
     4060:  150:            newNode = new ListNode;
     4060:  150-block  0
call    0 returned 4060
call    1 returned 4060
     4060:  151:            pPrevTemp -> pNext = newNode;
        -:  152:
     4060:  153:            FillData(newNode, pTemp);
call    0 returned 4060
     4060:  154:            pTemp = pTemp -> pNext;
        -:  155:        }
        -:  156:    }
      240:  157:}
        -:  158:
function _ZN4List8FreeListEv called 38379 returned 100% blocks executed 100%
    38379:  159:void List::FreeList() {
    38379:  160:    ListNode* pTemp = this -> _pFirstNode;
    38379:  160-block  0
    56982:  161:    while(nullptr != pTemp) {
    56982:  161-block  0
branch  0 taken 18603 (fallthrough)
branch  1 taken 38379
    18603:  162:        ListNode* pNextNode = pTemp -> pNext;
    18603:  163:        delete pTemp;
    18603:  163-block  0
branch  0 taken 18603 (fallthrough)
branch  1 taken 0
    18603:  163-block  1
call    2 returned 18603
call    3 returned 18603
    18603:  164:        pTemp = pNextNode;
    18603:  164-block  0
        -:  165:    }
    38379:  166:}
        -:  167:
function _ZNK4List4SizeEv called 31424 returned 100% blocks executed 100%
    31424:  168:size_t List::Size() const {
    31424:  169:    return _sz;
    31424:  169-block  0
        -:  170:}
function _ZNK4List5BeginEv called 9105 returned 100% blocks executed 100%
     9105:  171:List::Iterator List::Begin() const{
     9105:  172:    Iterator it(_pFirstNode);
     9105:  172-block  0
call    0 returned 9105
     9105:  173:    return it;
        -:  174:}
function _ZNK4List3EndEv called 3019236 returned 100% blocks executed 100%
  3019236:  175:List::Iterator List::End() const{
  3019236:  176:    Iterator it(nullptr);
  3019236:  176-block  0
call    0 returned 3019236
  3019236:  177:    return it;
        -:  178:}
        -:  179:
        -:  180://List::Iterator::Iterator() : _pNode(nullptr) {};
function _ZN4List8IteratorC2EPNS_8ListNodeE called 3028341 returned 100% blocks executed 100%
  3028341:  181:List::Iterator::Iterator(ListNode* pNode) : _pNode(pNode) {}
function _ZN4List8IteratorppEv called 3010131 returned 100% blocks executed 75%
  3010131:  182:List::Iterator& List::Iterator::operator++() {
  3010131:  183:    if(!_pNode) {
  3010131:  183-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 3010131
    #####:  184:        return *this;
    %%%%%:  184-block  0
        -:  185:    }
  3010131:  186:    _pNode = _pNode -> pNext;
  3010131:  187:    return *this;
  3010131:  187-block  0
        -:  188:}
function _ZN4List8IteratordeEv called 6008132 returned 100% blocks executed 100%
  6008132:  189:List::ListNode& List::Iterator::operator*() {
  6008132:  190:    return *_pNode;
  6008132:  190-block  0
        -:  191:}
        -:  192:
function _ZeqRK4ListS1_ called 4 returned 100% blocks executed 96%
        4:  193:bool operator==(const List& A, const List& B) {
        4:  194:    auto itListA = A.Begin();
        4:  194-block  0
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
     3004:  195:    while(itListA != A.End()) {
     3004:  195-block  0
call    0 returned 3004
branch  1 taken 3004 (fallthrough)
branch  2 taken 0 (throw)
     3004:  195-block  1
call    3 returned 3004
branch  4 taken 3001 (fallthrough)
branch  5 taken 3
     3001:  196:        auto itListB = B.Begin();
     3001:  196-block  0
call    0 returned 3001
branch  1 taken 3001 (fallthrough)
branch  2 taken 0 (throw)
     3001:  197:        bool isEqualNodeExist = false;
     3001:  197-block  0
        -:  198:
  3004001:  199:        while(itListB != B.End()) {
  3004001:  199-block  0
call    0 returned 3004001
branch  1 taken 3004001 (fallthrough)
branch  2 taken 0 (throw)
  3004001:  199-block  1
call    3 returned 3004001
branch  4 taken 3001000 (fallthrough)
branch  5 taken 3001
  3001000:  200:            if((*itListA).key == (*itListB).key){
  3001000:  200-block  0
call    0 returned 3001000
call    1 returned 3001000
call    2 returned 3001000
branch  3 taken 3000 (fallthrough)
branch  4 taken 2998000
     3000:  201:                isEqualNodeExist = true;
     3000:  201-block  0
        -:  202:            }
  3001000:  203:            ++itListB;
  3001000:  203-block  0
call    0 returned 3001000
        -:  204:        }
     3001:  205:        if(!isEqualNodeExist) {
     3001:  205-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 3000
        1:  206:            return false;
        1:  206-block  0
        -:  207:        }
     3000:  208:        ++itListA;
     3000:  208-block  0
call    0 returned 3000
        -:  209:    }
        3:  210:    return true;
        3:  210-block  0
        -:  211:}
function _ZneRK4ListS1_ called 1 returned 100% blocks executed 100%
        1:  212:bool operator!=(const List& A, const List& B) {
        1:  213:    return !(A == B);
        1:  213-block  0
call    0 returned 1
        -:  214:}
function _ZeqRKN4List8IteratorES2_ called 3019236 returned 100% blocks executed 100%
  3019236:  215:bool operator==(const List::Iterator& A, const List::Iterator& B) {
  3019236:  216:    return A._pNode == B._pNode;
  3019236:  216-block  0
        -:  217:}
function _ZneRKN4List8IteratorES2_ called 3019236 returned 100% blocks executed 100%
  3019236:  218:bool operator!=(const List::Iterator& A, const List::Iterator& B) {
  3019236:  219:    return !(A == B);
  3019236:  219-block  0
call    0 returned 3019236
        -:  220:}
        -:  221:
        -:  222:
